//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GrapeCity.Documents.Spread.Examples {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class StringResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal StringResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GrapeCity.Documents.Spread.Examples.StringResource", typeof(StringResource).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access cells, rows and columns.
        /// </summary>
        internal static string AccessCellsRowsColumns_Name {
            get {
                return ResourceManager.GetString("AccessCellsRowsColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access each area in range.
        /// </summary>
        internal static string AccessEachAreaOfRange_Name {
            get {
                return ResourceManager.GetString("AccessEachAreaOfRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access range.
        /// </summary>
        internal static string AccessRange_Name {
            get {
                return ResourceManager.GetString("AccessRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access each table range.
        /// </summary>
        internal static string AccessTableRanges_Name {
            get {
                return ResourceManager.GetString("AccessTableRanges.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access a worksheet.
        /// </summary>
        internal static string AccessWorksheet_Name {
            get {
                return ResourceManager.GetString("AccessWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate a worksheet.
        /// </summary>
        internal static string ActivateWorksheet_Name {
            get {
                return ResourceManager.GetString("ActivateWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add borders to cell.
        /// </summary>
        internal static string AddBordersToCell_Name {
            get {
                return ResourceManager.GetString("AddBordersToCell.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add comment for cell.
        /// </summary>
        internal static string AddComment_Name {
            get {
                return ResourceManager.GetString("AddComment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add custom name.
        /// </summary>
        internal static string AddCustomName_Name {
            get {
                return ResourceManager.GetString("AddCustomName.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add custom slicer style.
        /// </summary>
        internal static string AddCustomSlicerStyle_Name {
            get {
                return ResourceManager.GetString("AddCustomSlicerStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add custom table style.
        /// </summary>
        internal static string AddCustomTableStyle_Name {
            get {
                return ResourceManager.GetString("AddCustomTableStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add custom themes.
        /// </summary>
        internal static string AddCustomThemes_Name {
            get {
                return ResourceManager.GetString("AddCustomThemes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add borders to range.
        /// </summary>
        internal static string AddingBordersToRange_Name {
            get {
                return ResourceManager.GetString("AddingBordersToRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add series for chart.
        /// </summary>
        internal static string AddSeries_Name {
            get {
                return ResourceManager.GetString("AddSeries.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add slicers for pivot tables.
        /// </summary>
        internal static string AddSlicersForPivotTable_Name {
            get {
                return ResourceManager.GetString("AddSlicersForPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add slicers for table.
        /// </summary>
        internal static string AddSlicersForTable_Name {
            get {
                return ResourceManager.GetString("AddSlicersForTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a worksheet.
        /// </summary>
        internal static string AddWorksheet_Name {
            get {
                return ResourceManager.GetString("AddWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The examples in this folder demonstrate how to specify alignment settings, as folllows:
        ///- Horizontal alignment and vertical alignment
        ///- Text Orientation
        ///- Shrink to fit
        ///- Reading order
        ///- Wrap Text.
        /// </summary>
        internal static string Alignment_Descrip {
            get {
                return ResourceManager.GetString("Alignment.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alignment.
        /// </summary>
        internal static string Alignment_Name {
            get {
                return ResourceManager.GetString("Alignment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply built-in style to slicer.
        /// </summary>
        internal static string ApplySlicerStyle_Name {
            get {
                return ResourceManager.GetString("ApplySlicerStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply style to range.
        /// </summary>
        internal static string ApplyStyle_Name {
            get {
                return ResourceManager.GetString("ApplyStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply built-in style to table.
        /// </summary>
        internal static string ApplyTableStyle_Name {
            get {
                return ResourceManager.GetString("ApplyTableStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chart contains three type of axes, **category axis**, **value axis** and **series axis**,  they all generated automatically, **can not add or delete by programming**.
        ///
        ///Examples in Axes folder demonstrate how to specify **axes relative settings**, such as axis title, axis units, display unit label, gridlines, tick mark and tick mark label settings..
        /// </summary>
        internal static string Axes_Descrip {
            get {
                return ResourceManager.GetString("Axes.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Axes.
        /// </summary>
        internal static string Axes_Name {
            get {
                return ResourceManager.GetString("Axes.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basic sales report.
        /// </summary>
        internal static string BasicSalesReport_Name {
            get {
                return ResourceManager.GetString("BasicSalesReport.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bid tracker.
        /// </summary>
        internal static string BidTracker_Name {
            get {
                return ResourceManager.GetString("BidTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blood pressure tracker.
        /// </summary>
        internal static string BloodPressureTracker_Name {
            get {
                return ResourceManager.GetString("BloodPressureTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Blood sugar tracker.
        /// </summary>
        internal static string BloodSugarTracker_Name {
            get {
                return ResourceManager.GetString("BloodSugarTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The examples in **Borders** demonstrate how to specify border settings for range.
        ///- Border line style
        ///- Border color.
        /// </summary>
        internal static string Borders_Descrip {
            get {
                return ResourceManager.GetString("Borders.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Borders.
        /// </summary>
        internal static string Borders_Name {
            get {
                return ResourceManager.GetString("Borders.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change data field&apos;s summarize function.
        /// </summary>
        internal static string ChangeDataFiledSummarizeFunction_Name {
            get {
                return ResourceManager.GetString("ChangeDataFiledSummarizeFunction.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change workbook theme.
        /// </summary>
        internal static string ChangeWorkbookTheme_Name {
            get {
                return ResourceManager.GetString("ChangeWorkbookTheme.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change worksheet filter range.
        /// </summary>
        internal static string ChangeWorksheetFilterRange_Name {
            get {
                return ResourceManager.GetString("ChangeWorksheetFilterRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify chart just plot visible cells.
        /// </summary>
        internal static string ChartJustPlotVisibleCell_Name {
            get {
                return ResourceManager.GetString("ChartJustPlotVisibleCell.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Spread.Services** provides a comprehensive charting API:
        ///
        ///- Add Charts to a **worksheet** using the **IWorksheet.AddChart** method, it returns an instance of **IShape** whose **Chart** property can be used to access the new added chart.
        ///- Add data series with **IChart.SeriesCollection.Add** method
        ///- Cutomize chart tile with **IChart.ChartTitle** property
        ///- Cutomize chart legend with **IChart.Legend** property
        ///- Access and customize each data series through **ISeries** interface
        ///- Customize each dat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Charts_Descrip {
            get {
                return ResourceManager.GetString("Charts.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Charts.
        /// </summary>
        internal static string Charts_Name {
            get {
                return ResourceManager.GetString("Charts.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear comments.
        /// </summary>
        internal static string ClearComment_Name {
            get {
                return ResourceManager.GetString("ClearComment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear worksheet filter.
        /// </summary>
        internal static string ClearFilter_Name {
            get {
                return ResourceManager.GetString("ClearFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear outline.
        /// </summary>
        internal static string ClearOutline_Name {
            get {
                return ResourceManager.GetString("ClearOutline.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear sparkline group.
        /// </summary>
        internal static string ClearSparklineGroup_Name {
            get {
                return ResourceManager.GetString("ClearSparklineGroup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear sparklines.
        /// </summary>
        internal static string ClearSparklines_Name {
            get {
                return ResourceManager.GetString("ClearSparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collapse group.
        /// </summary>
        internal static string CollapseGroup_Name {
            get {
                return ResourceManager.GetString("CollapseGroup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Services enables users to annotate a worksheet by allowing them to write comments on cells in order to specify additional information about the data it contains.
        ///
        ///Add comment for **range** using range&apos;s **AddComment** method. it returns an instance of **IComment**, Show comment all the time with **Visible** property. Modify comment&apos;s layout with **Shape** property.
        ///
        ///Create rich text using **TextFrame** property of IShape, each runs can be different font styles..
        /// </summary>
        internal static string Comments_Descrip {
            get {
                return ResourceManager.GetString("Comments.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comments.
        /// </summary>
        internal static string Comments_Name {
            get {
                return ResourceManager.GetString("Comments.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to enable you to highlight important information in rows or columns of a worksheet, Spread.Services allows users to create conditional formatting rules for individual cells or a range of cells based on cell values. If the format condition matches with the cell value, it is assumed as true and the cell is formatted as per the specified rule.
        ///
        ///Spread.Services supports all type of condition format rules, such as **Cell Value** Rule, **Average** Rule, **Color Scale** Rule, **Data Bar** Rule, **Icon Set [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ConditionalFormatting_Descrip {
            get {
                return ResourceManager.GetString("ConditionalFormatting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Conditional Formatting.
        /// </summary>
        internal static string ConditionalFormatting_Name {
            get {
                return ResourceManager.GetString("ConditionalFormatting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config category and value axis style.
        /// </summary>
        internal static string ConfigAxesFormat_Name {
            get {
                return ResourceManager.GetString("ConfigAxesFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config axis title&apos;s style.
        /// </summary>
        internal static string ConfigAxisTitle_Name {
            get {
                return ResourceManager.GetString("ConfigAxisTitle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config bubble chart&apos;s layout.
        /// </summary>
        internal static string ConfigBubbleChartLayout_Name {
            get {
                return ResourceManager.GetString("ConfigBubbleChartLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set category axis&apos;s units.
        /// </summary>
        internal static string ConfigCategoryAxisUnits_Name {
            get {
                return ResourceManager.GetString("ConfigCategoryAxisUnits.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config chart area format.
        /// </summary>
        internal static string ConfigChartAreaFormat_Name {
            get {
                return ResourceManager.GetString("ConfigChartAreaFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config chart floor style.
        /// </summary>
        internal static string ConfigChartFloorStyle_Name {
            get {
                return ResourceManager.GetString("ConfigChartFloorStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config chart title style.
        /// </summary>
        internal static string ConfigChartTitleStyle_Name {
            get {
                return ResourceManager.GetString("ConfigChartTitleStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config chart wall style.
        /// </summary>
        internal static string ConfigChartWallStyle_Name {
            get {
                return ResourceManager.GetString("ConfigChartWallStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config comment&apos;s layout.
        /// </summary>
        internal static string ConfigCommentLayout_Name {
            get {
                return ResourceManager.GetString("ConfigCommentLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config data label&apos;s text and format.
        /// </summary>
        internal static string ConfigDataLabelTextAndFormat_Name {
            get {
                return ResourceManager.GetString("ConfigDataLabelTextAndFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config data point&apos;s format.
        /// </summary>
        internal static string ConfigDataPointFormat_Name {
            get {
                return ResourceManager.GetString("ConfigDataPointFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config display unit label&apos;s style.
        /// </summary>
        internal static string ConfigDisplayUnitLabel_Name {
            get {
                return ResourceManager.GetString("ConfigDisplayUnitLabel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config gridline&apos;s style.
        /// </summary>
        internal static string ConfigGridlines_Name {
            get {
                return ResourceManager.GetString("ConfigGridlines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config legend entry font style.
        /// </summary>
        internal static string ConfigLegendEntryFontStyle_Name {
            get {
                return ResourceManager.GetString("ConfigLegendEntryFontStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config legend position and layout.
        /// </summary>
        internal static string ConfigLegendPositionAndLayout_Name {
            get {
                return ResourceManager.GetString("ConfigLegendPositionAndLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config plot area format.
        /// </summary>
        internal static string ConfigPlotAreaFormat_Name {
            get {
                return ResourceManager.GetString("ConfigPlotAreaFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s 3D format.
        /// </summary>
        internal static string ConfigShape3DFormat_Name {
            get {
                return ResourceManager.GetString("ConfigShape3DFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s line format.
        /// </summary>
        internal static string ConfigShapeLine_Name {
            get {
                return ResourceManager.GetString("ConfigShapeLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s gradient fill.
        /// </summary>
        internal static string ConfigShapeWithGradientFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithGradientFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s pattern fill.
        /// </summary>
        internal static string ConfigShapeWithPatternFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithPatternFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s picture fill.
        /// </summary>
        internal static string ConfigShapeWithPictureFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithPictureFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s solid fill.
        /// </summary>
        internal static string ConfigShapeWithSolidFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithSolidFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape with texture fill.
        /// </summary>
        internal static string ConfigShapeWithTextureFill_Name {
            get {
                return ResourceManager.GetString("ConfigShapeWithTextureFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config slicer&apos;s layout.
        /// </summary>
        internal static string ConfigSlicerLayout_Name {
            get {
                return ResourceManager.GetString("ConfigSlicerLayout.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config sparkline&apos;s setting.
        /// </summary>
        internal static string ConfigSparklineSettings_Name {
            get {
                return ResourceManager.GetString("ConfigSparklineSettings.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set tick mark label&apos;s tyle.
        /// </summary>
        internal static string ConfigTickMarkLabel_Name {
            get {
                return ResourceManager.GetString("ConfigTickMarkLabel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config value axis&apos;s units.
        /// </summary>
        internal static string ConfigValueAxisUnits_Name {
            get {
                return ResourceManager.GetString("ConfigValueAxisUnits.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set workbook&apos;s reference style.
        /// </summary>
        internal static string ConfigWorkbookReferenceStyle_Name {
            get {
                return ResourceManager.GetString("ConfigWorkbookReferenceStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config worksheet properties.
        /// </summary>
        internal static string ConfigWorksheet_Name {
            get {
                return ResourceManager.GetString("ConfigWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Connect shape by connector shape.
        /// </summary>
        internal static string ConnectShapesByConnector_Name {
            get {
                return ResourceManager.GetString("ConnectShapesByConnector.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cost analysis with pareto chart.
        /// </summary>
        internal static string CostAnalysisWithParetoChart_Name {
            get {
                return ResourceManager.GetString("CostAnalysisWithParetoChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create average rule.
        /// </summary>
        internal static string CreateAverageRule_Name {
            get {
                return ResourceManager.GetString("CreateAverageRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create cell value rule.
        /// </summary>
        internal static string CreateCellValueRule_Name {
            get {
                return ResourceManager.GetString("CreateCellValueRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create chart.
        /// </summary>
        internal static string CreateChart_Name {
            get {
                return ResourceManager.GetString("CreateChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create connector line for pie of pie chart.
        /// </summary>
        internal static string CreateConnectorLine_Name {
            get {
                return ResourceManager.GetString("CreateConnectorLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create connector shape.
        /// </summary>
        internal static string CreateConnectorShape_Name {
            get {
                return ResourceManager.GetString("CreateConnectorShape.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create custom style.
        /// </summary>
        internal static string CreateCustomStyle_Name {
            get {
                return ResourceManager.GetString("CreateCustomStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create custom validation.
        /// </summary>
        internal static string CreateCustomValidation_Name {
            get {
                return ResourceManager.GetString("CreateCustomValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create data bar rule.
        /// </summary>
        internal static string CreateDatabBarRule_Name {
            get {
                return ResourceManager.GetString("CreateDatabBarRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create date validation.
        /// </summary>
        internal static string CreateDateValidation_Name {
            get {
                return ResourceManager.GetString("CreateDateValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create decimal validation.
        /// </summary>
        internal static string CreateDecimalValidation_Name {
            get {
                return ResourceManager.GetString("CreateDecimalValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create drop line.
        /// </summary>
        internal static string CreateDropLine_Name {
            get {
                return ResourceManager.GetString("CreateDropLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create expression rule.
        /// </summary>
        internal static string CreateExpressionRule_Name {
            get {
                return ResourceManager.GetString("CreateExpressionRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create high-low line.
        /// </summary>
        internal static string CreateHiLoLine_Name {
            get {
                return ResourceManager.GetString("CreateHiLoLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create hyperlinks.
        /// </summary>
        internal static string CreateHyperlinks_Name {
            get {
                return ResourceManager.GetString("CreateHyperlinks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create icon set rule.
        /// </summary>
        internal static string CreateIconSetRule_Name {
            get {
                return ResourceManager.GetString("CreateIconSetRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create list validation.
        /// </summary>
        internal static string CreateListValidation_Name {
            get {
                return ResourceManager.GetString("CreateListValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create multi rules for a range.
        /// </summary>
        internal static string CreateMultiRuleForRange_Name {
            get {
                return ResourceManager.GetString("CreateMultiRuleForRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create new work book.
        /// </summary>
        internal static string CreateNewWorkbook_Name {
            get {
                return ResourceManager.GetString("CreateNewWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create picture.
        /// </summary>
        internal static string CreatePicture_Name {
            get {
                return ResourceManager.GetString("CreatePicture.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create pivot table.
        /// </summary>
        internal static string CreatePivotTable_Name {
            get {
                return ResourceManager.GetString("CreatePivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create range group.
        /// </summary>
        internal static string CreateRangeGroup_Name {
            get {
                return ResourceManager.GetString("CreateRangeGroup.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create series line for column chart.
        /// </summary>
        internal static string CreateSeriesLine_Name {
            get {
                return ResourceManager.GetString("CreateSeriesLine.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create sparklines.
        /// </summary>
        internal static string CreateSparklines_Name {
            get {
                return ResourceManager.GetString("CreateSparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a table.
        /// </summary>
        internal static string CreateTable_Name {
            get {
                return ResourceManager.GetString("CreateTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create text length validation.
        /// </summary>
        internal static string CreateTextLength_Name {
            get {
                return ResourceManager.GetString("CreateTextLength.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create three color scale rule.
        /// </summary>
        internal static string CreateThreeColorScaleRule_Name {
            get {
                return ResourceManager.GetString("CreateThreeColorScaleRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create time validation.
        /// </summary>
        internal static string CreateTimeValidation_Name {
            get {
                return ResourceManager.GetString("CreateTimeValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create top bottom rule.
        /// </summary>
        internal static string CreateTopBottomRule_Name {
            get {
                return ResourceManager.GetString("CreateTopBottomRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create trend line.
        /// </summary>
        internal static string CreateTrendline_Name {
            get {
                return ResourceManager.GetString("CreateTrendline.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create two color scale rule.
        /// </summary>
        internal static string CreateTwoColorScaleRule_Name {
            get {
                return ResourceManager.GetString("CreateTwoColorScaleRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create unique rule.
        /// </summary>
        internal static string CreateUniqueRule_Name {
            get {
                return ResourceManager.GetString("CreateUniqueRule.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This example demonstrates how to show up down bars, specify up down bars&apos;s tyle..
        /// </summary>
        internal static string CreateUpDownBars_Descrip {
            get {
                return ResourceManager.GetString("CreateUpDownBars.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create up down bars for line chart.
        /// </summary>
        internal static string CreateUpDownBars_Name {
            get {
                return ResourceManager.GetString("CreateUpDownBars.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create whole number validation.
        /// </summary>
        internal static string CreateWholeNumberValidation_Name {
            get {
                return ResourceManager.GetString("CreateWholeNumberValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customer profitability analysis.
        /// </summary>
        internal static string CustomerProfitabilityAnalysis_Name {
            get {
                return ResourceManager.GetString("CustomerProfitabilityAnalysis.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set custom number format.
        /// </summary>
        internal static string CustomNumberFormat_Name {
            get {
                return ResourceManager.GetString("CustomNumberFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort by custom list.
        /// </summary>
        internal static string CustomSort_Name {
            get {
                return ResourceManager.GetString("CustomSort.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut copy range.
        /// </summary>
        internal static string CutCopyRange_Name {
            get {
                return ResourceManager.GetString("CutCopyRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Services provides users with the ability to validate data by restricting the type of information format and the values that can be entered in cells of a worksheet. You can create distinct validation scenarios for individual cells or a range of cells as per your requirements.
        ///
        ///Spread.Services supports all type of validations, such as **Whole Number** validation, **Decimal** validation, **List** validation, **Date** validation, **Time** validation, **Text length** validation, **Custom** validation.
        ///
        ///Ad [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DataValidation_Descrip {
            get {
                return ResourceManager.GetString("DataValidation.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataValidation.
        /// </summary>
        internal static string DataValidation_Name {
            get {
                return ResourceManager.GetString("DataValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set date and time format.
        /// </summary>
        internal static string DateAndTimeFormat_Name {
            get {
                return ResourceManager.GetString("DateAndTimeFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter date dynamicly.
        /// </summary>
        internal static string DateDynamicFilter_Name {
            get {
                return ResourceManager.GetString("DateDynamicFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply date filter.
        /// </summary>
        internal static string DateFilter_Name {
            get {
                return ResourceManager.GetString("DateFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The examples in this folder demonstrate how to use AutoFilter method do Date filter, such as filter **dates between two days**, **all dates in February**..
        /// </summary>
        internal static string DateFiltering_Descrip {
            get {
                return ResourceManager.GetString("DateFiltering.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DateFilter.
        /// </summary>
        internal static string DateFiltering_Name {
            get {
                return ResourceManager.GetString("DateFiltering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete chart.
        /// </summary>
        internal static string DeleteChart_Name {
            get {
                return ResourceManager.GetString("DeleteChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete conditional format rules.
        /// </summary>
        internal static string DeleteConditionalFormatRules_Name {
            get {
                return ResourceManager.GetString("DeleteConditionalFormatRules.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete hyperlinks.
        /// </summary>
        internal static string DeleteHyperlinks_Name {
            get {
                return ResourceManager.GetString("DeleteHyperlinks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete picture.
        /// </summary>
        internal static string DeletePicture_Name {
            get {
                return ResourceManager.GetString("DeletePicture.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete validation.
        /// </summary>
        internal static string DeleteValidation_Name {
            get {
                return ResourceManager.GetString("DeleteValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete a worksheet.
        /// </summary>
        internal static string DeleteWorksheet_Name {
            get {
                return ResourceManager.GetString("DeleteWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dirty and calculate.
        /// </summary>
        internal static string DirtyAndCalculation_Name {
            get {
                return ResourceManager.GetString("DirtyAndCalculation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do table filter.
        /// </summary>
        internal static string DoTableFilter_Name {
            get {
                return ResourceManager.GetString("DoTableFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event budget.
        /// </summary>
        internal static string EventBudget_Name {
            get {
                return ResourceManager.GetString("EventBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In **Excel Reporting**, you will explore some complete demo codes deonstrating how to generate an excel file or reporting at server side, after you click the **&quot;Run&quot;** button, something at server will happen as following:
        ///- Create an empty workbook
        ///- Execute all the codes in the code window
        ///- Save to an excel file
        ///
        ///Then you can view the result by downloading the excel file..
        /// </summary>
        internal static string ExcelReporting_Descrip {
            get {
                return ResourceManager.GetString("ExcelReporting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excel Reporting.
        /// </summary>
        internal static string ExcelReporting_Name {
            get {
                return ResourceManager.GetString("ExcelReporting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In some typical scenarios, you may have your own excel templates, you just want to open and update some of its contents at server side, such as changing values, cusomizing formattings, for such scenario, you can open an existing excel file with **Spread.Services** and manipulate it through plent of *Spread.Services APIs*, in this part:
        ///- You can download and view the original excel template by clicking the **&quot;Template&quot;** button
        ///- You can run all the codes and get changed excel file by clicking the **&quot;Run&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ExcelTemplates_Descrip {
            get {
                return ResourceManager.GetString("ExcelTemplates.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excel Templates.
        /// </summary>
        internal static string ExcelTemplates_Name {
            get {
                return ResourceManager.GetString("ExcelTemplates.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add new points for existing series.
        /// </summary>
        internal static string ExtendSeries_Name {
            get {
                return ResourceManager.GetString("ExtendSeries.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Spread.Services** provides some remarkable features that empowers users to include spreadsheets with high-performance attributes, customizable themes, configurable components, summarized data, application of custom styles, embedded drawing objects, integrated calculation engine, and so much more.
        ///
        ///You will explore a lot of example codes in this part about how to use each feature of Spread.Services..
        /// </summary>
        internal static string Features_Descrip {
            get {
                return ResourceManager.GetString("Features.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Features.
        /// </summary>
        internal static string Features_Name {
            get {
                return ResourceManager.GetString("Features.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The examples in **Fill** demonstrate how to set different kinds of fill to range.
        ///- Solid fill
        ///- Pattern fill
        ///- Linnear gradient fill
        ///- Rectgangular gradient fill.
        /// </summary>
        internal static string Fill_Descrip {
            get {
                return ResourceManager.GetString("Fill.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fill.
        /// </summary>
        internal static string Fill_Name {
            get {
                return ResourceManager.GetString("Fill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by automatic font color.
        /// </summary>
        internal static string FilterByAutomaticFontColor_Name {
            get {
                return ResourceManager.GetString("FilterByAutomaticFontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by cell color.
        /// </summary>
        internal static string FilterByCellColor_Name {
            get {
                return ResourceManager.GetString("FilterByCellColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by font color.
        /// </summary>
        internal static string FilterByFontColor_Name {
            get {
                return ResourceManager.GetString("FilterByFontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by icon.
        /// </summary>
        internal static string FilterByIcon_Name {
            get {
                return ResourceManager.GetString("FilterByIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by no fill.
        /// </summary>
        internal static string FilterByNoFill_Name {
            get {
                return ResourceManager.GetString("FilterByNoFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by no icon.
        /// </summary>
        internal static string FilterByNoIcon_Name {
            get {
                return ResourceManager.GetString("FilterByNoIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Services support all type of filters, such as **Number Filter**, **Text Filter**, **Date Filter**, **Color Filter** and **Icon Filter**.
        ///
        ///Filter range using range&apos;s **AutoFilter** method, apply **multi column filter** need invoke AutoFilter method more than once. if want to **re-apply filter** conditions when filter performed range&apos;s value changed, using **ApplyFilter** method of worksheet&apos;s **AutoFilter** instance..
        /// </summary>
        internal static string Filtering_Descrip {
            get {
                return ResourceManager.GetString("Filtering.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filtering.
        /// </summary>
        internal static string Filtering_Name {
            get {
                return ResourceManager.GetString("Filtering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The examples in this folder demonstrate how to use AutoFilter method to do color filter, such as filter by **font color**, filter by **interior**, filter by **automatic font color**, filter by **no fill**..
        /// </summary>
        internal static string FilteringByColor_Descrip {
            get {
                return ResourceManager.GetString("FilteringByColor.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by color.
        /// </summary>
        internal static string FilteringByColor_Name {
            get {
                return ResourceManager.GetString("FilteringByColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The examples in this folder demonstrate how to use AutoFilter method to do icon filter, filter by **specify icon** or filter by **no icon**, Range must **apply icon set conditional format rule** firstly before do icon filter..
        /// </summary>
        internal static string FilteringByIcon_Descrip {
            get {
                return ResourceManager.GetString("FilteringByIcon.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter by icon.
        /// </summary>
        internal static string FilteringByIcon_Name {
            get {
                return ResourceManager.GetString("FilteringByIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter items in pivot table.
        /// </summary>
        internal static string FilterItemsInPivotTable_Name {
            get {
                return ResourceManager.GetString("FilterItemsInPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font color.
        /// </summary>
        internal static string FontColor_Name {
            get {
                return ResourceManager.GetString("FontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font effect.
        /// </summary>
        internal static string FontEffect_Name {
            get {
                return ResourceManager.GetString("FontEffect.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font name.
        /// </summary>
        internal static string FontName_Name {
            get {
                return ResourceManager.GetString("FontName.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The examples in **Font** demonstrate how to specify font settings to range:
        ///- Font color
        ///- Font size
        ///- Font name
        ///- Bold, Italic
        ///- Underline
        ///- Strikethrough, Superscript, Subscript.
        /// </summary>
        internal static string Fonts_Descrip {
            get {
                return ResourceManager.GetString("Fonts.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fonts.
        /// </summary>
        internal static string Fonts_Name {
            get {
                return ResourceManager.GetString("Fonts.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font size.
        /// </summary>
        internal static string FontSize_Name {
            get {
                return ResourceManager.GetString("FontSize.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font style.
        /// </summary>
        internal static string FontStyle_Name {
            get {
                return ResourceManager.GetString("FontStyle.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set font underline.
        /// </summary>
        internal static string FontUnderline_Name {
            get {
                return ResourceManager.GetString("FontUnderline.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Spread.Services** provides a lot of APIs to customize appearances for range:
        ///
        ///- Set **number format** for range with **IRange.NumberFormat** property.
        ///- Set **alignment** for range with **IRange.HorizontalAlignment**,  **IRange.VerticalAlignment**, **IRange.IndentLevel** and so on.
        ///- Set **font** for range with **IRange.Font** property.
        ///- Set **border** for range with **IRange.Borders** property.
        ///- Specify **solid fill, pattern fill and gradient fill** for range with **IRange.Interior** property.
        ///- [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Formatting_Descrip {
            get {
                return ResourceManager.GetString("Formatting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formatting.
        /// </summary>
        internal static string Formatting_Name {
            get {
                return ResourceManager.GetString("Formatting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Services provides you with the ability to create and use formulas - expressions to calculate the value of a cell quickly and accurately in the spreadsheets. You can also use some built-in functions and operators to generate formulas and calculate values in cells.
        ///
        ///Calc engine has follow capacities:
        ///- Hundreds of excel built-in functions
        ///- Array formula
        ///- Dirty and Calculation
        ///- Table formula.
        /// </summary>
        internal static string Formulas_Descrip {
            get {
                return ResourceManager.GetString("Formulas.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formulas.
        /// </summary>
        internal static string Formulas_Name {
            get {
                return ResourceManager.GetString("Formulas.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get display format.
        /// </summary>
        internal static string GetDisplayFormat_Name {
            get {
                return ResourceManager.GetString("GetDisplayFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get feature related used range.
        /// </summary>
        internal static string GetFeatureRelatedUsedRange_Name {
            get {
                return ResourceManager.GetString("GetFeatureRelatedUsedRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get row count and column count.
        /// </summary>
        internal static string GetRangeRowCountColumnCount_Name {
            get {
                return ResourceManager.GetString("GetRangeRowCountColumnCount.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get used range.
        /// </summary>
        internal static string GetWorksheetUsedRange_Name {
            get {
                return ResourceManager.GetString("GetWorksheetUsedRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group exist sparklines.
        /// </summary>
        internal static string GroupExistSparklines_Name {
            get {
                return ResourceManager.GetString("GroupExistSparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spreadsheets with tons of data can often become a hassle to read, consuming a lot of time in visualizing, managing and analyzing the information which is relevant for you.
        ///
        ///Spread.Services provides you with the ability to summarize large amounts of information in groups so that complex spreadsheets are easier to navigate. After rows of data in a spreadsheet are grouped, users can expand and collapse details with the click of a square button placed in the group header row.
        ///
        ///**Increase** specific rows **outli [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Grouping_Descrip {
            get {
                return ResourceManager.GetString("Grouping.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Grouping.
        /// </summary>
        internal static string Grouping_Name {
            get {
                return ResourceManager.GetString("Grouping.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set horizontal and vertical alignment.
        /// </summary>
        internal static string HAlignVAlign_Name {
            get {
                return ResourceManager.GetString("HAlignVAlign.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide rows and columns.
        /// </summary>
        internal static string HiddenRowColumn_Name {
            get {
                return ResourceManager.GetString("HiddenRowColumn.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Home inventory.
        /// </summary>
        internal static string HomeInventoryForJS_Name {
            get {
                return ResourceManager.GetString("HomeInventoryForJS.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create hyperlink for **range** with **Add** method of **worksheet&apos;s Hyperlinks** instance or **range&apos;s Hyperlinks** instance. Spread.Services support follow type hyperlinks:
        ///- Link to web page
        ///- Link to specific range in this document
        ///- Link to external file
        ///- Link to email address.
        /// </summary>
        internal static string Hyperlinks_Descrip {
            get {
                return ResourceManager.GetString("Hyperlinks.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hyperlinks.
        /// </summary>
        internal static string Hyperlinks_Name {
            get {
                return ResourceManager.GetString("Hyperlinks.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import excel file.
        /// </summary>
        internal static string ImportExcelFileToWorkbook_Name {
            get {
                return ResourceManager.GetString("ImportExcelFileToWorkbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import excel file with password.
        /// </summary>
        internal static string ImportExcelFileWithPassword_Name {
            get {
                return ResourceManager.GetString("ImportExcelFileWithPassword.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert or delete cells.
        /// </summary>
        internal static string InsertCellsDeleteCells_Name {
            get {
                return ResourceManager.GetString("InsertCellsDeleteCells.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert or delete rows and columns.
        /// </summary>
        internal static string InsertDeleteRowsColumns_Name {
            get {
                return ResourceManager.GetString("InsertDeleteRowsColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert or delete table rows and columns.
        /// </summary>
        internal static string InsertDeleteTableRowColumns_Name {
            get {
                return ResourceManager.GetString("InsertDeleteTableRowColumns.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set linear gradient fill.
        /// </summary>
        internal static string LinearGradientFill_Name {
            get {
                return ResourceManager.GetString("LinearGradientFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge cells.
        /// </summary>
        internal static string MergeCells_Name {
            get {
                return ResourceManager.GetString("MergeCells.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modify subtotals for pivot field.
        /// </summary>
        internal static string ModifySubtotalsForPivotField_Name {
            get {
                return ResourceManager.GetString("ModifySubtotalsForPivotField.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Modify validation.
        /// </summary>
        internal static string ModifyValidation_Name {
            get {
                return ResourceManager.GetString("ModifyValidation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monthly bussiness budget.
        /// </summary>
        internal static string MonthlyBusinessBudget_Name {
            get {
                return ResourceManager.GetString("MonthlyBusinessBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Movie list.
        /// </summary>
        internal static string MovieList_Name {
            get {
                return ResourceManager.GetString("MovieList.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multi check filter.
        /// </summary>
        internal static string MultiSelectFilter_Name {
            get {
                return ResourceManager.GetString("MultiSelectFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply number filter.
        /// </summary>
        internal static string NumberFilter_Name {
            get {
                return ResourceManager.GetString("NumberFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NumberFilter.
        /// </summary>
        internal static string NumberFiltering_Name {
            get {
                return ResourceManager.GetString("NumberFiltering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The example in **NumberFormat** demonstrates how to set number format to range, *Spread.Services* use excel like number formatter..
        /// </summary>
        internal static string NumberFormat_Descrip {
            get {
                return ResourceManager.GetString("NumberFormat.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NumberFormat.
        /// </summary>
        internal static string NumberFormat_Name {
            get {
                return ResourceManager.GetString("NumberFormat.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set number format.
        /// </summary>
        internal static string NumberFormats_Name {
            get {
                return ResourceManager.GetString("NumberFormats.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set pattern fill.
        /// </summary>
        internal static string PatternFill_Name {
            get {
                return ResourceManager.GetString("PatternFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform calculations in table.
        /// </summary>
        internal static string PerformCalculationsInTable_Name {
            get {
                return ResourceManager.GetString("PerformCalculationsInTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personal address book.
        /// </summary>
        internal static string PersonalAddressBook_Name {
            get {
                return ResourceManager.GetString("PersonalAddressBook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Personal net worth calculator.
        /// </summary>
        internal static string PersonalNetWorthCalculator_Name {
            get {
                return ResourceManager.GetString("PersonalNetWorthCalculator.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Services allows inserting picture for worksheet.
        ///
        ///Add picture for **worksheet** use **AddPicture** method of worksheet&apos;s **shapes** colletion..
        /// </summary>
        internal static string Picture_Descrip {
            get {
                return ResourceManager.GetString("Picture.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Picture.
        /// </summary>
        internal static string Picture_Name {
            get {
                return ResourceManager.GetString("Picture.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Pivot table** is a **data summarization tool**. it can automatically count, total or average the data stored in spread sheet, displaying the results **in a second table showing the summarized data**.
        ///
        ///Create pivot cache with **Create** method of workbook&apos;s **PivotCaches** collection. it returns an instance of **IPivotCache**, Create pivot table with **CreatePivotTable** method of pivot cache instance. another way is using **Add** method of worksheet&apos;s **PivotTables** collection.
        ///
        ///Specify pivot table&apos;s **r [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PivotTable_Descrip {
            get {
                return ResourceManager.GetString("PivotTable.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PivotTable.
        /// </summary>
        internal static string PivotTable_Name {
            get {
                return ResourceManager.GetString("PivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project cost tracker.
        /// </summary>
        internal static string ProjectCostTrackerForJS_Name {
            get {
                return ResourceManager.GetString("ProjectCostTrackerForJS.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The examples in **Protection** demonstrate how to specify range&apos;s protection settings, as follows:
        ///- Formula Hidden
        ///- Locked.
        /// </summary>
        internal static string Protection_Descrip {
            get {
                return ResourceManager.GetString("Protection.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protection.
        /// </summary>
        internal static string Protection_Name {
            get {
                return ResourceManager.GetString("Protection.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protect worksheet.
        /// </summary>
        internal static string ProtectWorksheet_Name {
            get {
                return ResourceManager.GetString("ProtectWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range is the most important concept in Spread.Services. it is the entrance for most of features.
        ///
        ///Examples in **RangeOperations** demonstrates how to:
        ///- Access cells, rows and columns
        ///- Access each area of range
        ///- Access range in various of ways
        ///- Cut, Copy, Paste range
        ///- Work with Used range
        ///- Get row count and column count
        ///- Hide row or column
        ///- Insert or delete cells
        ///- Insert or delete rows and columns
        ///- Merge cells
        ///- Set values to range
        ///- Set row height and column width.
        /// </summary>
        internal static string RangeOperations_Descrip {
            get {
                return ResourceManager.GetString("RangeOperations.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Range Operations.
        /// </summary>
        internal static string RangeOperations_Name {
            get {
                return ResourceManager.GetString("RangeOperations.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reapply filter.
        /// </summary>
        internal static string ReApplyFilter_Name {
            get {
                return ResourceManager.GetString("ReApplyFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set rectangular gradient fill.
        /// </summary>
        internal static string RectangularGradientFill_Name {
            get {
                return ResourceManager.GetString("RectangularGradientFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh pivot table.
        /// </summary>
        internal static string RefreshPivotTable_Name {
            get {
                return ResourceManager.GetString("RefreshPivotTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove table.
        /// </summary>
        internal static string RemoveTable_Name {
            get {
                return ResourceManager.GetString("RemoveTable.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Services Features.
        /// </summary>
        internal static string RootExample_Descrip {
            get {
                return ResourceManager.GetString("RootExample.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        internal static string RootExample_Name {
            get {
                return ResourceManager.GetString("RootExample.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rotate cell contents.
        /// </summary>
        internal static string RotateCellContents_Name {
            get {
                return ResourceManager.GetString("RotateCellContents.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Samples.
        /// </summary>
        internal static string Samples_Name {
            get {
                return ResourceManager.GetString("Samples.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save to excel file.
        /// </summary>
        internal static string SaveWorkbookToExcelFile_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookToExcelFile.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save to excel file with password.
        /// </summary>
        internal static string SaveWorkbookWithPassword_Name {
            get {
                return ResourceManager.GetString("SaveWorkbookWithPassword.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Series** is the most frequently used feature in chart, each chart contains one or serveral data series, and each series consists of a group of **data points**. 
        ///
        ///These examples demonstrate how to **add series** for chart, and how to specify series relative settings, such as bubble chart&apos;s **bubble scale** and what **size represents**, **data label**&apos;s text and style, specific **data point**&apos;s style, show pie of pie chart&apos;s **connector line**, show **drop line**, **high-low line**, **up-down bar**, and s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Series_Descrip {
            get {
                return ResourceManager.GetString("Series.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Series.
        /// </summary>
        internal static string Series_Name {
            get {
                return ResourceManager.GetString("Series.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set value axis&apos;s scale type.
        /// </summary>
        internal static string SetAxisScaleType_Name {
            get {
                return ResourceManager.GetString("SetAxisScaleType.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config axis tick mark layout.
        /// </summary>
        internal static string SetAxisTickMark_Name {
            get {
                return ResourceManager.GetString("SetAxisTickMark.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config formula hidden.
        /// </summary>
        internal static string SetRangeFormulaHidden_Name {
            get {
                return ResourceManager.GetString("SetRangeFormulaHidden.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config range locked.
        /// </summary>
        internal static string SetRangeLocked_Name {
            get {
                return ResourceManager.GetString("SetRangeLocked.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set values to range.
        /// </summary>
        internal static string SetRangeValue_Name {
            get {
                return ResourceManager.GetString("SetRangeValue.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set rich text for comment.
        /// </summary>
        internal static string SetRichTextForComment_Name {
            get {
                return ResourceManager.GetString("SetRichTextForComment.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set row height and column width.
        /// </summary>
        internal static string SetRowHeightColumnWidth_Name {
            get {
                return ResourceManager.GetString("SetRowHeightColumnWidth.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set shape&apos;s text.
        /// </summary>
        internal static string SetShapeText_Name {
            get {
                return ResourceManager.GetString("SetShapeText.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set vary color for column chart.
        /// </summary>
        internal static string SetVaryColorForColumnChart_Name {
            get {
                return ResourceManager.GetString("SetVaryColorForColumnChart.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Services provides you the ability to embed drawing objects like shapes and pictures in cells of a worksheet. You can insert arrows, lines, chart, slicer, pictures and general shape.
        ///
        ///Create shape for worksheet use **AddShape** method of worksheet&apos;s **shapes** collection. Use **Fill** property of shape instance to config shape&apos;s fill style, **Line** property to config shape&apos;s line style, **ThreeD** property to config shape&apos;s 3D format, **TextFrame** property to config shape&apos;s rich text..
        /// </summary>
        internal static string Shape_Descrip {
            get {
                return ResourceManager.GetString("Shape.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shape.
        /// </summary>
        internal static string Shape_Name {
            get {
                return ResourceManager.GetString("Shape.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show specific level group.
        /// </summary>
        internal static string ShowSpecificLevel_Name {
            get {
                return ResourceManager.GetString("ShowSpecificLevel.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shrink to fit.
        /// </summary>
        internal static string ShrinkToFit_Name {
            get {
                return ResourceManager.GetString("ShrinkToFit.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple Budget.
        /// </summary>
        internal static string SimpleBudget_Name {
            get {
                return ResourceManager.GetString("SimpleBudget.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple invoice.
        /// </summary>
        internal static string SimpleInvoice_Name {
            get {
                return ResourceManager.GetString("SimpleInvoice.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Simple personal budget.
        /// </summary>
        internal static string SimplePersonalBudgetForJS_Name {
            get {
                return ResourceManager.GetString("SimplePersonalBudgetForJS.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slicers are **visual filters**. Can filter table or pivot table by slicers.
        ///
        ///Create **slicer cache** with **Add** method of workbook&apos;s **SlicerCaches** collection, it returns an instance of slicer cache. create **slice**r with **Add** method of slicer cache&apos;s **slicers** collection.
        ///
        ///Support either **built-in** slicer style or **custom slier** style..
        /// </summary>
        internal static string Slicer_Descrip {
            get {
                return ResourceManager.GetString("Slicer.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Slicer.
        /// </summary>
        internal static string Slicer_Name {
            get {
                return ResourceManager.GetString("Slicer.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set solid fill.
        /// </summary>
        internal static string SolidFill_Name {
            get {
                return ResourceManager.GetString("SolidFill.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Services support all type of sorting, as follows:
        ///- Sort by value
        ///- Sort by font color
        ///- Sort by interior
        ///- Sort by icon
        ///- Sort by custom list.
        /// </summary>
        internal static string Sorting_Descrip {
            get {
                return ResourceManager.GetString("Sorting.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorting.
        /// </summary>
        internal static string Sorting_Name {
            get {
                return ResourceManager.GetString("Sorting.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort by font color.
        /// </summary>
        internal static string SortRangeByFontColor_Name {
            get {
                return ResourceManager.GetString("SortRangeByFontColor.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort by icon.
        /// </summary>
        internal static string SortRangeByIcon_Name {
            get {
                return ResourceManager.GetString("SortRangeByIcon.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort by interior.
        /// </summary>
        internal static string SortRangeByInterior_Name {
            get {
                return ResourceManager.GetString("SortRangeByInterior.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort range by value.
        /// </summary>
        internal static string SortRangeByValue_Name {
            get {
                return ResourceManager.GetString("SortRangeByValue.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Services allows you to highlight specific information and see how it varies over time using Sparklines. Sparklines can be understood as small, lightweight charts that are drawn inside cells to quickly visualize data for improved analysis.
        ///
        ///Create **a group of new sparklines** with **Add** method of range&apos;s **SparklineGroups** collection, sparkline rely on sparkline group, no way to create sparkline alone without sparkline group.
        ///
        ///Support follow type of sparklines:
        ///- Line
        ///- Column
        ///- Win/Loss.
        /// </summary>
        internal static string Sparklines_Descrip {
            get {
                return ResourceManager.GetString("Sparklines.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sparklines.
        /// </summary>
        internal static string Sparklines_Name {
            get {
                return ResourceManager.GetString("Sparklines.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Examples in **Spread.Sheets Viewer** demonstrate how to use **Spread.Services** and **Spread.Sheets** together, **Spread.Services** works at the server side to import/export excel template files, **Spread.Sheets** works at browser side as a viwer or editor, to learn more about **Spread.Sheets**, visit [Spread.Sheets Home Page](http://spread.grapecity.com/spreadjs/sheets//).
        ///
        ///All examples in this part will work as following steps:
        ///- **Spread.Services** **Open** an existing excel file at server side
        ///- **S [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SpreadSheetsViewer_Descrip {
            get {
                return ResourceManager.GetString("SpreadSheetsViewer.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Sheets Viewer.
        /// </summary>
        internal static string SpreadSheetsViewer_Name {
            get {
                return ResourceManager.GetString("SpreadSheetsViewer.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Student calendar.
        /// </summary>
        internal static string StudentCalendarForJS_Name {
            get {
                return ResourceManager.GetString("StudentCalendarForJS.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter table range.
        /// </summary>
        internal static string TableFilter_Name {
            get {
                return ResourceManager.GetString("TableFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To manage and analyse related data easier and faster, you can create tables using a range of cells in your spreadsheet. A table consists of rows and columns that can be formatted and managed independently in a worksheet. You will learn how to:
        ///
        ///- Add or remove a table in worksheet
        ///- Apply **filter** for a column of table
        ///- Apply **sort** for a column of table
        ///- Apply either **built-in** or **custom** table style
        ///- Access each part of table conviniently
        ///- Add or remove a column in table
        ///- Performn ca [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Tables_Descrip {
            get {
                return ResourceManager.GetString("Tables.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tables.
        /// </summary>
        internal static string Tables_Name {
            get {
                return ResourceManager.GetString("Tables.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort table range.
        /// </summary>
        internal static string TableSort_Name {
            get {
                return ResourceManager.GetString("TableSort.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create text filter.
        /// </summary>
        internal static string TextFilter_Descrip {
            get {
                return ResourceManager.GetString("TextFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply text filter.
        /// </summary>
        internal static string TextFilter_Name {
            get {
                return ResourceManager.GetString("TextFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The example in this folder demonstrates how to use AutoFilter method to do **text filter**, such as filter in rows **contains &quot;e&quot;**..
        /// </summary>
        internal static string TextFiltering_Descrip {
            get {
                return ResourceManager.GetString("TextFiltering.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TextFilter.
        /// </summary>
        internal static string TextFiltering_Name {
            get {
                return ResourceManager.GetString("TextFiltering.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set text orientation.
        /// </summary>
        internal static string TextOrientation_Name {
            get {
                return ResourceManager.GetString("TextOrientation.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spread.Services provides users with a set of built-in themes so as to enable them to change the overall appearance of workbook. Besides, it also allows users to create custom theme and apply it in order to set up a workbook as per their own preferences and requirements.
        ///
        ///Change workbook&apos;s theme with **Theme** property of **workbook** instance, Add custom theme with **Add** method of **Themes** class instance, get built-in theme instance with built-in properties of **Themes** class, get custom theme instance [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Theme_Descrip {
            get {
                return ResourceManager.GetString("Theme.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme.
        /// </summary>
        internal static string Theme_Name {
            get {
                return ResourceManager.GetString("Theme.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To do list with progress tracker.
        /// </summary>
        internal static string ToDoListWithProgressTracker_Name {
            get {
                return ResourceManager.GetString("ToDoListWithProgressTracker.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ToJson and FromJson.
        /// </summary>
        internal static string ToJsonFromJson_Name {
            get {
                return ResourceManager.GetString("ToJsonFromJson.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Travel expense report.
        /// </summary>
        internal static string TravelExpenseReportForJS_Name {
            get {
                return ResourceManager.GetString("TravelExpenseReportForJS.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tutorial.
        /// </summary>
        internal static string Tutorial_Name {
            get {
                return ResourceManager.GetString("Tutorial.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ungroup range.
        /// </summary>
        internal static string UngroupRange_Name {
            get {
                return ResourceManager.GetString("UngroupRange.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unprotect a worksheet.
        /// </summary>
        internal static string UnprotectWorksheet_Name {
            get {
                return ResourceManager.GetString("UnprotectWorksheet.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use array formula.
        /// </summary>
        internal static string UseArrayFormula_Name {
            get {
                return ResourceManager.GetString("UseArrayFormula.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Another two of Spread.Services useage scenario are as follows:
        ///- Use Spread.Services API programming, then export to an excel file -**Programming** Part.
        ///- Import excel template to Spread.Services data model, then use Spread.Services API programming, make contents more abundantly, then export to an excel file - **Templates** Part..
        /// </summary>
        internal static string UseCases_Descrip {
            get {
                return ResourceManager.GetString("UseCases.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Cases.
        /// </summary>
        internal static string UseCases_Name {
            get {
                return ResourceManager.GetString("UseCases.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Date axis.
        /// </summary>
        internal static string UseDateAxis_Name {
            get {
                return ResourceManager.GetString("UseDateAxis.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use slicer do filter operation.
        /// </summary>
        internal static string UseSlicerDoFilter_Name {
            get {
                return ResourceManager.GetString("UseSlicerDoFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use slicer to clear filter.
        /// </summary>
        internal static string UseSlicerToClearFilter_Name {
            get {
                return ResourceManager.GetString("UseSlicerToClearFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use table formula.
        /// </summary>
        internal static string UseTableFormula_Name {
            get {
                return ResourceManager.GetString("UseTableFormula.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create value filter.
        /// </summary>
        internal static string ValueFilter_Descrip {
            get {
                return ResourceManager.GetString("ValueFilter.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value Filter.
        /// </summary>
        internal static string ValueFilter_Name {
            get {
                return ResourceManager.GetString("ValueFilter.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A workbook is a spreadsheet document that comprises of one or more worksheets that are stored within the Worksheets collection.
        ///
        ///The examples in this folder demonstrate follow cases:
        ///- Create new workbook
        ///- Import excel file to workbook
        ///- Import excel file with password to workbook
        ///- Export workbook to an excel file
        ///- Export workbook to an excel file with password
        ///- ToJson, FromJson.
        /// </summary>
        internal static string Workbook_Descrip {
            get {
                return ResourceManager.GetString("Workbook.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Workbook.
        /// </summary>
        internal static string Workbook_Name {
            get {
                return ResourceManager.GetString("Workbook.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The examples in this folder demonstrate follow cases:
        ///- Add worksheet
        ///- delete worksheet
        ///- Protect worksheet
        ///- Unprotect worksheet
        ///- Active worksheet
        ///- worksheet settings.
        /// </summary>
        internal static string Worksheets_Descrip {
            get {
                return ResourceManager.GetString("Worksheets.Descrip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Worksheets.
        /// </summary>
        internal static string Worksheets_Name {
            get {
                return ResourceManager.GetString("Worksheets.Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrap text.
        /// </summary>
        internal static string WrapText_Name {
            get {
                return ResourceManager.GetString("WrapText.Name", resourceCulture);
            }
        }
    }
}
